<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="processChecker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAAABADoAgAANgAAACAgAAAAAAgAqAgAAB4DAAAQEBAAAAAEACgBAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAACAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABEQABEAAAAAAAAAAAAQAAAREAAQAAAAAAAAAAAAAAAAERAAAA
        EAAAAAAAAAAAAAAAAAAAAAAAAAABEQAAAAABAAAAAAABAAAAEREAAAAAAQAAAAAAARAAAAERAAAAARAA
        AAAAAAAREAAAAAAAAJkQAAAAAAAAEREAAAAA//+FkBAAAAAAABEREREADweA91ARAAAAAAABERERmfD3
        9wcAAAAAAAAAmZmZmZX4gIeAcAAAAAAAAIiIiIiHf3/38IcABQAAD/d3f3d39///f3gHdwgAAHAAAAgH
        AAAIAAgIB4AHgAAHCH8IcHiAdwcIB3CA9wAAAHD3cPCHAAiAcHD3AAgAAJh3D3CICAiAhwgHCAiAgAEZ
        jwd/D/93f3f3eH/3d/AACVeAd3d4iIiIiIgIgAAAAAAA8Hd4hZmZmZmZkAAAAAAAAAcPd3kREREREQAA
        AAAAAAAIeAB5EREREREAAAAAAAARlYd3WRERABEAAAAAAAAAERmQAAEREQABAAAAAAAAABEQAAAQAREA
        AAAAAPDwAAEQAAAAEAEQAQAAAA8PAAEAAAAAAAAAEQAAAAAPDwAAAAAAAAAAAAAAAAAAAPDwAAAAAAAA
        AAAAAAAAAAAAAP/////////3////45//++O////j9//////4/7/78P+/+fj+f/x//H/8P8Bf/AOAT/4A
        AP/8AAB//AAAO+AAAAvAAAAB4AAAA/AAAAPAAAABgAAAAeAAAJ/8AAB//gAA//4AAP/wADP/8Hg7//H2
        P/Xn9m/rv/8/6/////X/////KAAAACAAAABAAAAAAQAIAAAAAACABAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAEBAQACAgIAAwMDAAREREAFhYWABwc
        HAAiIiIAKSkpAFVVVQBNTU0AQkJCADk5OQCAfP8AUFD/AJMA1gD/7MwAxtbvANbn5wCQqa0AAAAzAAAA
        ZgAAAJkAAADMAAAzAAAAMzMAADNmAAAzmQAAM8wAADP/AABmAAAAZjMAAGZmAABmmQAAZswAAGb/AACZ
        AAAAmTMAAJlmAACZmQAAmcwAAJn/AADMAAAAzDMAAMxmAADMmQAAzMwAAMz/AAD/ZgAA/5kAAP/MADMA
        AAAzADMAMwBmADMAmQAzAMwAMwD/ADMzAAAzMzMAMzNmADMzmQAzM8wAMzP/ADNmAAAzZjMAM2ZmADNm
        mQAzZswAM2b/ADOZAAAzmTMAM5lmADOZmQAzmcwAM5n/ADPMAAAzzDMAM8xmADPMmQAzzMwAM8z/ADP/
        MwAz/2YAM/+ZADP/zAAz//8AZgAAAGYAMwBmAGYAZgCZAGYAzABmAP8AZjMAAGYzMwBmM2YAZjOZAGYz
        zABmM/8AZmYAAGZmMwBmZmYAZmaZAGZmzABmmQAAZpkzAGaZZgBmmZkAZpnMAGaZ/wBmzAAAZswzAGbM
        mQBmzMwAZsz/AGb/AABm/zMAZv+ZAGb/zADMAP8A/wDMAJmZAACZM5kAmQCZAJkAzACZAAAAmTMzAJkA
        ZgCZM8wAmQD/AJlmAACZZjMAmTNmAJlmmQCZZswAmTP/AJmZMwCZmWYAmZmZAJmZzACZmf8AmcwAAJnM
        MwBmzGYAmcyZAJnMzACZzP8Amf8AAJn/MwCZzGYAmf+ZAJn/zACZ//8AzAAAAJkAMwDMAGYAzACZAMwA
        zACZMwAAzDMzAMwzZgDMM5kAzDPMAMwz/wDMZgAAzGYzAJlmZgDMZpkAzGbMAJlm/wDMmQAAzJkzAMyZ
        ZgDMmZkAzJnMAMyZ/wDMzAAAzMwzAMzMZgDMzJkAzMzMAMzM/wDM/wAAzP8zAJn/ZgDM/5kAzP/MAMz/
        /wDMADMA/wBmAP8AmQDMMwAA/zMzAP8zZgD/M5kA/zPMAP8z/wD/ZgAA/2YzAMxmZgD/ZpkA/2bMAMxm
        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
        AAAdPQAA//8AAA==
</value>
  </data>
</root>